# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-03-09 16:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0008_auto_20180222_1541'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_key', utils.fields.Base64Field(db_column='public_key', max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=128)),
                ('subtask_id', models.CharField(db_index=True, max_length=128, unique=True)),
                ('state', models.CharField(choices=[('FORCING_REPORT', 'forcing_report'), ('REPORTED', 'reported'), ('FORCING_RESULT_TRANSFER', 'forcing_result_transfer'), ('RESULT_UPLOADED', 'result_uploaded'), ('FORCING_ACCEPTANCE', 'forcing_acceptance'), ('REJECTED', 'rejected'), ('ADDITIONAL_VERIFICATION', 'additional_verification'), ('ACCEPTED', 'accepted'), ('FAILED', 'failed')], max_length=32)),
                ('next_deadline', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='storedmessage',
            name='subtask_id',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='subtask',
            name='ack_report_computed_task',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks_for_ack_report_computed_task', to='core.StoredMessage'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtasks_as_provider', to='core.Client'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='reject_report_computed_task',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks_for_reject_report_computed_task', to='core.StoredMessage'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='report_computed_task',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks_for_report_computed_task', to='core.StoredMessage'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='requestor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtasks_as_requestor', to='core.Client'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='subtask_results_accepted',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks_for_subtask_results_accepted', to='core.StoredMessage'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='subtask_results_rejected',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks_for_subtask_results_rejected', to='core.StoredMessage'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='task_to_compute',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks_for_task_to_compute', to='core.StoredMessage'),
        ),
        migrations.AlterUniqueTogether(
            name='subtask',
            unique_together=set([('requestor', 'subtask_id'), ('requestor', 'task_id')]),
        ),
    ]
